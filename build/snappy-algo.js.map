{"version":3,"sources":["webpack://SnappyAlgo/webpack/universalModuleDefinition","webpack://SnappyAlgo/webpack/bootstrap","webpack://SnappyAlgo/./node_modules/snappy-grid-core/dist/snappy-grid-core.min.js","webpack://SnappyAlgo/./src/SnappyAlgo.js"],"names":["SnapAlgo","itemProps","previousX","x","previousY","y","previousWidth","width","previousHeight","height","item","newX","newY","newWidth","newHeight","grid","gridOptions","algoData","revertedItems","revertPreviousMovements","state","items","gridColumns","gridRows","allItems","forEach","i","id","collisions","getCollisions","hasHitGluedElement","success","updatedItem","SnapperCore","updateGridWithItemMovement","setPreviousMovements","_canResizeX","itemsCanResizeGrid","resizeGridDirections","_canResizeY","getMoveDetails","itemsToMove","maxRows","maxCols","updatedItems","itm","clone","collisionCount","length","Math","max","gridSizing","result","run","force","movedItem","revertInYDirection","xLimit","helpers","isDefined","_getCloserPosition","push","movedIds","stickyElements","previousMovements","filter","sort","m1","m2","xDiff","_id","diffY","diffX","yIterator","sign","xIterator","canFit","j","block","findGluedElement","find","glued","gluedElements","gluedItemsCount","largestEl","iteratedItem","whitelistIds","yLimit","cell","gridItem","visible","indexOf","objIsInArray","correctedX","draggedItem","handleCollisions","newCollisions","currentCollision","nextCollisions","getNextGluedFreeCollisions","concat","rowsRequired","columnsRequired","Object","keys","map","key","gluedElement","movingXDir","findLargestGluedElement","yOffset","xOffset","limit","collision","minY","Number","MAX_SAFE_INTEGER","minX","min"],"mappings":"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","file":"snappy-algo.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SnappyAlgo\"] = factory();\n\telse\n\t\troot[\"SnappyAlgo\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/SnappyAlgo.js\");\n","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.SnappyGridCore=e():t.SnappyGridCore=e()}(window,function(){return function(t){var e={};function i(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}return i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var o in t)i.d(n,o,function(e){return t[e]}.bind(null,o));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,\"a\",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p=\"\",i(i.s=0)}([function(t,e,i){\"use strict\";i.r(e);var n=function(t){return void 0!==t&&null!=t},o={flex:\"flex\",fixed:\"fixed\"},r={none:\"none\",x:\"x\",y:\"y\",both:\"both\"},s={x:0,y:0,width:1,height:1,classes:[],glued:!1,visible:!0,canResize:!0,displayResize:!0,position:{topPx:0,leftPx:0,topPct:0,leftPct:0,widthPx:0,heightPx:0,widthPct:0,heightPct:0,ending:\"px\"},meta:{isDragging:!1}},d={position:\"absolute\",border:\"2px dashed grey\",zIndex:-1},h={gridColumns:12,gridRows:12,width:\"100%\",height:\"100%\",itemClassName:\"grid-item\",classes:[],renderMode:o.flex,stickyElements:!0,itemsCanResizeGrid:!0,resizeGridDirections:r.y,useTransition:!0,transitionDuration:600,onTransitionComplete:function(t,e,i){},onAllTransitionsComplete:function(t,e,i){},resizeClassName:\"snap-resize-handle\",enableCSS3:!0,algorithm:null};function u(t,e){if(null==t)return{};var i,n,o=function(t,e){if(null==t)return{};var i,n,o={},r=Object.keys(t);for(n=0;n<r.length;n++)i=r[n],e.indexOf(i)>=0||(o[i]=t[i]);return o}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)i=r[n],e.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(t,i)&&(o[i]=t[i])}return o}function a(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{},n=Object.keys(i);\"function\"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(i).filter(function(t){return Object.getOwnPropertyDescriptor(i,t).enumerable}))),n.forEach(function(e){g(t,e,i[e])})}return t}function g(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}function l(t){return function(t){if(Array.isArray(t)){for(var e=0,i=new Array(t.length);e<t.length;e++)i[e]=t[e];return i}}(t)||function(t){if(Symbol.iterator in Object(t)||\"[object Arguments]\"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}()}i.d(e,\"renderModeType\",function(){return o}),i.d(e,\"resizeOptions\",function(){return r}),i.d(e,\"defaultItemOptions\",function(){return s}),i.d(e,\"defaultGridOptions\",function(){return h});e.default={getItemStyles:function(){return{boxSizing:\"border-box\",position:\"absolute\"}},getItemClasses:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:s,e=l(t.classes).concat([t.itemClassName]);return t.glued&&e.push(\"snapper-glued\"),e},getEmptyGrid:function(t){for(var e=[],i=0;i<t;i++)e.push([]);return e},getItemPosition:function(t,e,i,n,r,s,d,h,u){return u===o.flex?a({},this.getItemPositionPixels(t,e,i,n,r,s,d,h),this.getItemPositionPercentages(t,e,i,n,r,s,d,h)):this.getItemPositionPixels(t,e,i,n,r,s,d,h)},getItemPositionPercentages:function(t,e,i,n,o,r,s,d){var h=Math.floor(t/n),u=Math.floor(e/i),a=t-h*n,g=e-u*i,l=49/t/100,c=49/e/100,m=Math.min(s,a),f=Math.min(o+s,a)-m,p=Math.min(d,g);return{leftPct:100*(s*h+m)/t+l,widthPct:100*(o*h+f)/t+l,topPct:100*(d*u+p)/e+c,heightPct:100*(r*u+(Math.min(r+d,g)-p))/e+c,ending:\"%\"}},getItemPositionPixels:function(t,e,i,n,o,r,s,d){var h=Math.floor(t/n),u=Math.floor(e/i),a=t-h*n,g=e-u*i,l=Math.min(s,a),c=Math.min(o+s,a)-l,m=Math.min(d,g);return{widthPx:h*o+c,heightPx:u*r+(Math.min(r+d,g)-m),topPx:u*d+m,leftPx:h*s+l,ending:\"px\"}},updateMovedItem:function(t,e,i){var n=t.newX,o=t.newY,r=t.newWidth,s=t.newHeight,d=e.gridWidth,h=e.gridHeight,u=e.gridRows,g=e.gridColumns,l=i.renderMode,c=a({},t);if(!r||!s)return console.error(\"Item \".concat(key,\" does not have a newWidth or newHeight value. Unable to correctly resize item\")),t;c.x=n,c.y=o,c.width=r,c.height=s;var m=this.getItemPosition(d,h,u,g,c.width,c.height,c.x,c.y,l),f=this.getItemPositionStyles(i,c.styles,m);return c.position=a({},m),c.styles=a({},f),c},updateGridWithMovedItems:function(t,e){for(var i in e){var n=e[i];this.updateGridWithItemMovement(t,n,n.x,n.y,n.width,n.height)}},getUpdatedMovedItems:function(t,e,i,n,o,r,s,d){var h=this;return t.forEach(function(t){var u=h.updateMovedItem(t,s,d);if(key===e){var g=a({},u.position,{ending:\"px\",topPx:i,leftPx:n,widthPx:o,heightPx:r}),l=h.getItemPositionStyles(d,u.styles,g);u.position=a({},g),u.styles=a({},l)}return u})},getUpdatedGridSizeItems:function(t,e,i){var n=this,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[],r=e.renderMode,s=i.gridRows,d=i.gridColumns,h=i.gridHeight,u=i.gridWidth;return t.map(function(t){if(!(o.indexOf(t.id)>-1)){var i=n.getItemPosition(u,h,s,d,t.width,t.height,t.x,t.y,r);return a({},t,{position:i,styles:n.getItemPositionStyles(e,t.styles,i)})}})},getGridBoundaries:function(t){return{leftBoundary:0,rightBoundary:t.gridWidth,topBoundary:0,bottomBoundary:t.gridHeight}},getItemSizing:function(t,e){var i=e.gridWidth,n=e.gridHeight,o=t.width,r=t.height;return{itemWidthPx:o*(i/gridColumns),itemHeightPx:r*(n/gridRows)}},calculateGridMatrixSize:function(t,e,i){var n=e.itemsCanResizeGrid,o=e.resizeGridDirections,r=i.gridRows,s=i.gridColumns,d=n&&\"y\"!==o,h=n&&\"x\"!==o;if(!d&&!h)return{rows:r,columns:s};var u=0,a=0;return t.forEach(function(t){var e=t.x+t.width,i=t.y+t.height;e>a&&(a=e),i>u&&(u=i)}),{rows:h?Math.max(u,r):r,columns:d?Math.max(a,s):s}},calculateGridSize:function(t,e,i,n){var o=e.gridRows,r=e.gridColumns;return{newGridWidth:t.widthPx/r*n,newGridHeight:t.heightPx/o*i}},calculateMovementChange:function(t,e,i,n){var o=e.itemsCanResizeGrid,r=o&&\"y\"!==e.resizeGridDirections,s=o&&\"x\"!==e.resizeGridDirections,d=i.widthPx/e.gridColumns,h=i.heightPx/e.gridRows,u=n.currentMouseX-n.initialMouseX,a=n.currentMouseY-n.initialMouseY,g=n.initialLeft+u,l=n.initialTop+a,c=Math.round(g/d),m=Math.round(l/h);return c<0?c=0:c+1>e.gridColumns&&!r&&(c=e.gridColumns-1),m<0?m=0:m+1>e.gridRows&&!s&&(m=e.gridRows-1),{newX:c,newY:m,newLeftPx:g,newTopPx:l}},calculateResizeChange:function(t,e,i,n){var o=i.widthPx/e.gridColumns,r=i.heightPx/e.gridRows,s=n.currentMouseX-n.initialMouseX,d=n.currentMouseY-n.initialMouseY,h=n.initialWidth+s,u=n.initialHeight+d,a=Math.round(h/o),g=Math.round(u/r);return h<o&&(a=1,h=o),u<r&&(g=1,u=r),{newWidthPx:h,newHeightPx:u,newWidth:a,newHeight:g,newLeftPx:t.position.leftPx,newTopPx:t.position.topPx}},calculatePositionChange:function(t,e){var i=e.gridSizing,n=e.gridOptions,o=i.widthPx/n.gridColumns,r=i.heightPx/n.gridRows;return{newWidthPx:Math.round(o*t.width),newHeightPx:Math.round(r*t.height),newLeftPx:Math.round(o*t.x),newTopPx:Math.round(r*t.y),newX:t.x,newY:t.y,newWidth:t.width,newHeight:t.height}},getNoMovementResult:function(t,e,i){var n=a({},e,{position:a({},e.position,{ending:\"px\",topPx:i.newTopPx,leftPx:i.newLeftPx,widthPx:i.newWidthPx,heightPx:i.newHeightPx})}),o=t.items.map(function(t){return t.id==n.id?n:t});return{success:!0,grid:t.grid,updatedItems:o,targetItem:n,gridSizing:t.gridSizing,movementChange:i,itemsMoved:!1}},itemHasMoved:function(t,e){return e.newX!=t.x||e.newY!=t.y},itemHasResized:function(t,e){return e.newWidth!==t.width||e.newHeight!==t.height},checkProposedGridSizing:function(t,e,i){var n=t.gridOptions,o=n.resizeGridDirections!==r.y,s=n.resizeGridDirections!==r.x;if(!o&&e!==n.gridColumns||n.gridColumns<1)throw\"Invalid grid column proposition from algorithm\";if(!s&&i!==n.gridRows||n.gridRows<1)throw\"Invalid grid row proposition from algorithm\"},getPlaceholderStyles:function(t){return a({},d,{left:\"\".concat(t.leftPx,\"px\"),top:\"\".concat(t.topPx,\"px\"),width:\"\".concat(t.widthPx,\"px\"),height:\"\".concat(t.heightPx,\"px\")})},addItemToGrid:function(t,e){var i={newX:t.x,newY:t.y,newWidth:t.width,newHeight:t.height,newTopPx:t.position.topPx,newLeftPx:t.position.leftPx,newWidthPx:t.position.widthPx,newHeightPx:t.position.heightPx};return this.onItemMovement(t,e,i)},movementIsWithinBounds:function(t,e){var i=e.gridColumns,n=e.gridRows,o=e.itemsCanResizeGrid,r=e.resizeGridDirections,s=t.newX,d=t.newY,h=t.newWidth,u=t.newHeight;return(o&&\"y\"!==r||s+h<=i)&&(o&&\"x\"!==r||d+u<=n)},onItemMovement:function(t,e,i){var n=this,o=e.gridOptions.renderMode,r=e.gridOptions,s=this.getNoMovementResult(e,t,i),d=a({},t);if(!this.movementIsWithinBounds(i,r))return s;var h=r.algo.run(e,d,i.newX,i.newY,i.newWidth,i.newHeight);if(!h.success)return s;var u=h.gridColumns!==r.gridColumns||h.gridRows!==r.gridRows,g=e.gridSizing.widthPx,l=e.gridSizing.heightPx;if(u){this.checkProposedGridSizing(e,h.gridColumns,h.gridRows);var c=this.calculateGridSize(e.gridSizing,r,h.gridRows,h.gridColumns);g=c.newGridWidth,l=c.newGridHeight}var m=Object.keys(h.itemsToMove).map(function(t){var e=h.itemsToMove[t],s=n.getItemPosition(g,l,h.gridRows,h.gridColumns,e.width,e.height,e.x,e.y,o);if(e.id===d.id){var u=n.getPlaceholderStyles(s);e.meta=a({},e.meta,{placeholderStyles:u}),e.position=a({},e.position,{ending:\"px\",topPx:i.newTopPx,leftPx:i.newLeftPx,widthPx:i.newWidthPx,heightPx:i.newHeightPx}),e.styles=n.getItemPositionStyles(r,e.styles,e.position),console.log(e.styles)}else e.position=s,e.styles=n.getItemPositionStyles(r,e.styles,s);return e});return{success:h.success,grid:e.grid,updatedItems:m,itemsMoved:Object.keys(h.itemsToMove).length>1,targetItem:d,movementChange:i,gridSizing:{gridRows:h.gridRows,gridColumns:h.gridColumns,heightPx:l,widthPx:g}}},onItemPositionChanged:function(t,e,i){var n=this.calculatePositionChange(t,i);return this.positionHasChanged(t,e)?this.onItemMovement(e,i,n):this.getNoMovementResult(i,e,n)},positionHasChanged:function(t,e){return t.x!==e.x||t.y!==e.y||t.width!==e.width||t.height!==e.height},onItemDragStart:function(t){if(t.glued)return{item:t,success:!1};var e=this.getPlaceholderStyles(t.position);return{item:a({},t,{meta:a({},t.meta,{isDragging:!0,placeholderStyles:e})}),success:!0}},onItemDrag:function(t,e,i){var n=a({},this.calculateMovementChange(t,e.gridOptions,e.gridSizing,i),{newWidth:t.width,newHeight:t.height,newWidthPx:t.position.widthPx,newHeightPx:t.position.heightPx});return!t.meta.isDragging||t.glued?this.getNoMovementResult(e,t,n):this.itemHasMoved(t,n)?this.onItemMovement(t,e,n):this.getNoMovementResult(e,t,n)},onItemDragStop:function(t,e,i,n,o,r){var s=t.width,d=t.height,h=t.x,u=t.y,g=o.gridRows,l=o.gridColumns,c=o.renderMode,m=a({},t.meta,{isDragging:!1}),f=this.getItemPosition(i,n,g,l,s,d,h,u,c);return a({},t,{position:f,styles:this.getItemPositionStyles(o,t.styles,f),meta:m})},onItemResizeStart:function(t){return t.glued?{item:t,success:!1}:{item:a({},t,{meta:a({},t.meta,{isResizing:!0})}),success:!0}},onItemResize:function(t,e,i){var n=a({},this.calculateResizeChange(t,e.gridOptions,e.gridSizing,i),{newX:t.x,newY:t.y,newLeftPx:t.position.leftPx,newTopPx:t.position.topPx});return!t.meta.isResizing||t.glued?this.getNoMovementResult(e,t,n):this.itemHasResized(t,n)?this.onItemMovement(t,e,n):this.getNoMovementResult(e,t,n)},onItemResizeStop:function(t,e,i,n,o,r){var s=t.width,d=t.height,h=t.x,u=t.y,g=o.gridRows,l=o.gridColumns,c=o.renderMode,m=a({},t.meta,{isResizing:!1}),f=this.getItemPosition(i,n,g,l,s,d,h,u,c);return a({},t,{position:f,styles:this.getItemPositionStyles(o,t.styles,f),meta:m})},updateGridWithItemMovement:function(t,e,i,n,o,r){var s=e.id,d=e.x,h=e.y,u=e.width,a=e.height;this.ensureGridHasRow(t,h),this.setGridWithValue(t,s,i,n,o,r,void 0,!1),this.setGridWithValue(t,s,d,h,u,a,e,!0)},updateGridWithItem:function(t,e){var i=e.id,n=e.x,o=e.y,r=e.width,s=e.height;this.setGridWithValue(t,i,n,o,r,s,e,!0)},removeGridItem:function(t,e,i,n,o){var r=this,s=i.id,d=i.x,h=i.y,u=i.width,g=i.height,l=o.widthPx,c=o.heightPx,m=n.renderMode;this.ensureGridHasRow(e,h),this.setGridWithValue(e,s,d,h,u,g,void 0,!0);var f=n.algo.onGridItemRemoved(i,e,n);return{updatedItems:t.map(function(t){var e=f.find(function(e){return e.id===t.id});if(!e)return null;var i=e.x,o=e.y,s=e.width,d=e.height,h=a({},t,{x:i,y:o,width:s,height:d}),u=r.getItemPosition(l,c,n.gridRows,n.gridColumns,s,d,i,o,m);return h.position=u,h.styles=r.getItemPositionStyles(n,h.styles,u),h}).filter(function(t){return null!=t})}},ensureGridHasRow:function(t,e){t[e]||(t[e]=[])},setGridWithValue:function(t,e,i,o,r,s,d){for(var h=arguments.length>7&&void 0!==arguments[7]&&arguments[7],u=o;u<o+s;u++)for(var a=i;a<i+r;a++){var g=t[u][a];n(g)&&g.id!=e&&!h||(t[u][a]=d)}},getItemPositionStyles:function(t,e,i){var n=e||{},o=(n.transform,n.left,n.top,u(n,[\"transform\",\"left\",\"top\"]));return\"%\"===i.ending?a({},o,{left:\"\".concat(i.leftPct,\"%\"),top:\"\".concat(i.topPct,\"%\"),width:\"\".concat(i.widthPct,\"%\"),height:\"\".concat(i.heightPct,\"%\")}):t.enableCSS3?a({},o,{width:\"\".concat(i.widthPx,\"px\"),height:\"\".concat(i.heightPx,\"px\"),transform:\"translate(\".concat(i.leftPx,\"px, \").concat(i.topPx,\"px)\")}):a({},o,{left:\"\".concat(i.leftPx,\"px\"),top:\"\".concat(i.topPx,\"px\"),width:\"\".concat(i.widthPx,\"px\"),height:\"\".concat(i.heightPx,\"px\")})},getGridXY:function(t,e,i){var n=t.gridWidth,o=t.gridHeight,r=t.gridRows,s=t.gridColumns;return{x:this.getGridPosition(n,i,s),y:this.getGridPosition(o,e,r)}},getGridWH:function(t,e,i,n,o){var r=o.gridRows,s=o.gridColumns;return{width:this.getGridPosition(t,i,s),height:this.getGridPosition(e,n,r)}},getGridPosition:function(t,e,i){return Math.max(1,Math.round(e/t*i))},getBoundaryLimitedSizing:function(t,e,i,n,o,s){var d=s.resizeGridDirections,h=s.itemsCanResizeGrid,u=o.rightBoundary,a=o.bottomBoundary,g=h&&d!==r.x;return{widthPx:h&&d!==r.y?i:Math.min(i,u-t),heightPx:g?n:Math.min(n,a-e)}}}}])});","import SnapperCore, { helpers } from 'snappy-grid-core'\r\n\r\nclass SnapAlgo {\r\n    getItemInitialData( itemProps ) {\r\n        return {\r\n            previousX: itemProps.x,\r\n            previousY: itemProps.y,\r\n            previousWidth: itemProps.width,\r\n            previousHeight: itemProps.height\r\n        }\r\n    }\r\n\r\n    updatedItem( item, newX, newY, newWidth, newHeight ) {\r\n        item.x = newX\r\n        item.y = newY\r\n        item.width = newWidth\r\n        item.height = newHeight\r\n        item.newX = newX\r\n        item.newY = newY\r\n        item.newWidth = newWidth\r\n        item.newHeight = newHeight\r\n    }\r\n\r\n    onGridItemRemoved( item, grid, gridOptions ) {\r\n        const { previousX, previousY } = item.algoData\r\n        const revertedItems = this.revertPreviousMovements( item, previousX, previousY, grid, gridOptions )\r\n\r\n        return revertedItems\r\n    }\r\n\r\n    run ( state, itemProps, newX, newY, newWidth, newHeight ) {\r\n        const { grid, gridOptions, items } = state\r\n        const { gridColumns, gridRows } = gridOptions\r\n        const item = {\r\n            ...itemProps,\r\n        }\r\n        const allItems = {}\r\n        state.items.forEach(i => allItems[ i.id ] = i)\r\n\r\n        // get any collisions for this movement\r\n        const collisions = this.getCollisions( allItems, grid, newX, newY, newWidth, newHeight, [ itemProps.id ] )\r\n\r\n        // hitting a glued element stops any movement possibility\r\n        if ( this.hasHitGluedElement( collisions ) )\r\n            return { success: false }\r\n\r\n        // get a copy of the item\r\n        this.updatedItem( item, newX, newY, newWidth, newHeight )\r\n\r\n        // ok, this item can go where it wants. update the grid\r\n        SnapperCore.updateGridWithItemMovement( grid, item, itemProps.x, itemProps.y, itemProps.width, itemProps.height )\r\n\r\n        // remove any previously registered movements resulting from collisions\r\n        this.setPreviousMovements( item, true )\r\n\r\n        // set the resize directions as according to the users supplied options\r\n        this._canResizeX = gridOptions.itemsCanResizeGrid && gridOptions.resizeGridDirections !== 'y'\r\n        this._canResizeY = gridOptions.itemsCanResizeGrid && gridOptions.resizeGridDirections !== 'x'\r\n\r\n        // run the algo\r\n        const { itemsToMove, maxRows, maxCols } = this.getMoveDetails( allItems, grid, item, newX, newY, newWidth, newHeight, collisions)\r\n \r\n        const updatedItems = {}\r\n        // for each updated item, update the grid and add it to the list of updated items\r\n        itemsToMove.forEach( itm => {\r\n            const i = allItems[ itm.id ]\r\n            const clone = { ...i }\r\n\r\n            this.updatedItem( clone, itm.newX, itm.newY, itm.width, itm.height )\r\n            SnapperCore.updateGridWithItemMovement(grid, clone, i.x, i.y, i.width, i.height)\r\n            \r\n            updatedItems[ i.id ] = clone\r\n        })\r\n\r\n        // add the currently moved item to the update list\r\n        updatedItems[ item.id ] = item\r\n\r\n        // try to move any items back to where they were if possible\r\n        const revertedItems = this.revertPreviousMovements( item, itemProps.x, itemProps.y, grid, gridOptions, items, collisions )\r\n\r\n        // add all reverted items to the update list\r\n        revertedItems.forEach( i => {\r\n            const { x, y } = i\r\n\r\n            updatedItems[ i.id ] = {\r\n                ...allItems[ i.id ],\r\n                x,\r\n                y,\r\n            }\r\n        })\r\n\r\n        return {\r\n            success: true,\r\n            itemsToMove: updatedItems,\r\n            collisionCount: collisions.length,\r\n            items,\r\n            gridRows: Math.max( maxRows, gridOptions.gridRows, newY + newHeight ),\r\n            gridColumns: Math.max( maxCols, gridOptions.gridColumns, newX + newWidth ),\r\n            item\r\n        }\r\n    }\r\n\r\n    addItemToGrid( grid, gridOptions, gridSizing, items, itemProps ) {\r\n        const result = this.run( grid, gridOptions, gridSizing, items, itemProps, itemProps.x, itemProps.y, itemProps.width, itemProps.height  )\r\n        return result\r\n    }\r\n\r\n    setPreviousMovements( item, force ) {\r\n        if ( force || ( item.algoData.previousX === item.x && item.algoData.previousY === item.y )) {\r\n            item.algoData.previousX = item.x\r\n            item.algoData.previousY = item.y\r\n        }\r\n    }\r\n\r\n    revertPreviousMovements( movedItem, previousX, previousY, grid, gridOptions ) {\r\n        const { resizeGridDirections } = gridOptions\r\n\r\n        if ( resizeGridDirections === 'y' ) {\r\n            return this.revertInYDirection( movedItem, previousX, previousY, grid, gridOptions )\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n\r\n    revertInYDirection( movedItem, previousX, previousY, grid, gridOptions ) {\r\n        const { gridRows, gridColumns } = gridOptions\r\n        const xLimit = previousX + movedItem.width\r\n        const revertedItems = []\r\n\r\n        for ( let y = previousY + movedItem.height; y < gridRows; y++ ) {\r\n            if ( !grid[ y ] )\r\n                return revertedItems\r\n\r\n            for ( let x = previousX; x < xLimit; x++ ) {\r\n                const item = grid[ y ][ x ]\r\n\r\n                if ( !helpers.isDefined( item ))\r\n                    continue\r\n\r\n                if (this._getCloserPosition( item, item.algoData.previousX, item.algoData.previousY, grid, gridOptions )) {\r\n                    const { x, y } = item\r\n                    item.x = item.newX\r\n                    item.y = item.newY\r\n                    SnapperCore.updateGridWithItemMovement( grid, item, x, y, item.width, item.height )\r\n                    revertedItems.push( item )\r\n                }\r\n\r\n                if ( item.width + item.x >= xLimit ) {\r\n                    x = xLimit\r\n                    y = item.y + item.height - 1\r\n                }\r\n                else {\r\n                    x = item.x + item.width\r\n                }\r\n            }\r\n        }\r\n\r\n        return revertedItems\r\n    }\r\n\r\n    revertPreviousMovementsOld( movedItem, grid, gridOptions, items, collisions ) {\r\n        //let collisionCount = collisions.length\r\n        let movedIds = []\r\n        let revertedItems = []\r\n\r\n        // if the user does not want sticky elements, then\r\n        // ignore this request \r\n        if (!gridOptions.stickyElements)\r\n            return\r\n\r\n        // sort by x first then y. may need to change this to \r\n        // see what direction the dragged item is moving in\r\n        const previousMovements = items\r\n            .filter( ( item ) => {\r\n                return ( item.algoData.previousX != item.x || item.algoData.previousY != item.y )\r\n                    && item.id !== movedItem.id\r\n            } )\r\n            .sort((m1, m2) => {\r\n                const xDiff = m1.x - m2.x\r\n\r\n                if (xDiff !== 0)\r\n                    return xDiff\r\n\r\n                return m1.y - m2.y\r\n            })\r\n\r\n        for (let i = 0; i < previousMovements.length; i++) {\r\n            const item = previousMovements[i]\r\n            const { previousX, previousY } = item.algoData\r\n\r\n            if (this._getCloserPosition( item, previousX, previousY, grid, gridOptions )) {\r\n                const { x, y } = item\r\n                item.x = item.newX\r\n                item.y = item.newY\r\n                SnapperCore.updateGridWithItemMovement( grid, item, x, y, item.width, item.height )\r\n                revertedItems[ item.id ] = item\r\n\r\n                if (previousX === item.x && previousY === item.y) {\r\n                    movedIds.push(item._id);\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            revertedItems,\r\n            //unmovedCollisions: collisions,\r\n        }\r\n    }\r\n\r\n    _getCloserPosition( item, x, y, grid, gridOptions ) {\r\n        const diffY = item.y - y\r\n        const diffX = item.x - x\r\n\r\n        let yIterator = Math.sign( diffY )\r\n        let xIterator = Math.sign( diffX )\r\n        let newX = x\r\n        let newY = y\r\n\r\n        if (diffX + diffY === 0)\r\n            return false;\r\n\r\n        while (true) {\r\n            if (this.canFit( newX, newY, item.width, item.height, item.id, grid, gridOptions )) {\r\n                item.newX = newX;\r\n                item.newY = newY;\r\n                return true;\r\n            }\r\n\r\n            // safe as Math.sign(0) === 0\r\n            if (newX !== item.x)\r\n                newX += xIterator\r\n\r\n            if (newY !== item.y)\r\n                newY += yIterator\r\n\r\n            if ( newX === item.x )\r\n                xIterator = 0\r\n\r\n            if ( newY === item.y )\r\n                yIterator = 0\r\n\r\n            if ( xIterator + yIterator === 0)\r\n                return false;\r\n\r\n            else if (newX > gridOptions.gridColumns || newX < 0 || newY > gridOptions.gridRows || newY < 0)\r\n                return false;\r\n        }\r\n    }\r\n\r\n    canFit( x, y, width, height, id, grid, gridOptions ) {\r\n        const {\r\n            gridColumns,\r\n            gridRows\r\n        } = gridOptions\r\n\r\n        if ( x + width > gridColumns \r\n            || x < 0\r\n            || y + height > gridRows \r\n            || y < 0\r\n        )\r\n            return false;\r\n\r\n        for ( let j = y; j < y + height; j++ ) {\r\n            const block = grid[j];\r\n\r\n            if ( !helpers.isDefined( block ) ) {\r\n                grid[j] = [];\r\n                continue;\r\n            }\r\n\r\n            for ( let i = x; i < x + width; i++ ) {\r\n                if ( helpers.isDefined( block[i] ) && block[i].id != id)\r\n                    return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasHitGluedElement(items) {\r\n        return this.findGluedElement( items ) != null;\r\n    }\r\n   \r\n    findGluedElement( items ) {\r\n        return items.find( item => item.glued )\r\n    }\r\n\r\n    findLargestGluedElement(items) {\r\n        const gluedElements = items.filter( i => i.glued )\r\n        const gluedItemsCount = gluedElements.length\r\n\r\n        if ( gluedItemsCount === 0 )\r\n            return null;\r\n\r\n        let largestEl = gluedElements[0];\r\n\r\n        for ( let i = 1; i < gluedItemsCount; i++) {\r\n            const iteratedItem = gluedElements[i];\r\n\r\n            if ( this._canResizeX )\r\n                largestEl = largestEl.width + largestEl.x > iteratedItem.width + iteratedItem.x ? largestEl : iteratedItem;\r\n\r\n            else\r\n                largestEl = largestEl.height + largestEl.y > iteratedItem.height + iteratedItem.y ? largestEl : iteratedItem;\r\n        }\r\n\r\n        return largestEl;\r\n    }\r\n\r\n    getCollisions( allItems, grid, newX, newY, width, height, whitelistIds ) {\r\n        const yLimit = newY + height\r\n        const xLimit = newX + width\r\n\r\n        let collisions = []\r\n        \r\n        for ( let y = newY; y < yLimit; y++ ) {\r\n            grid[ y ] = grid[ y ] || [];\r\n\r\n            for ( let x = newX; x < xLimit; x++ ) {\r\n                const cell = grid[ y ][ x ]\r\n\r\n                if ( !cell )\r\n                    continue\r\n\r\n                const gridItem = allItems[ cell.id ]\r\n\r\n                if (gridItem.visible && whitelistIds.indexOf( gridItem.id ) == -1 && !helpers.objIsInArray(collisions, gridItem, 'id'))\r\n                    collisions.push( gridItem );\r\n\r\n                const correctedX = gridItem.x + gridItem.width - 1\r\n\r\n                if ( correctedX < x )\r\n                    throw 'x invalid for grid item - incorrectly placed in grid'\r\n\r\n                x = correctedX\r\n            }\r\n        }\r\n\r\n        return collisions;\r\n    }\r\n\r\n    getMoveDetails( allItems, grid, draggedItem, newX, newY, newWidth, newHeight, collisions) {\r\n        let itemsToMove = {}\r\n        let maxRows = 0\r\n        let maxCols = 0\r\n\r\n        this.handleCollisions( newX, newY, newWidth, newHeight, collisions );\r\n\r\n        while (collisions.length > 0) {\r\n            let newCollisions = []\r\n\r\n            for (var i = 0; i < collisions.length; i++) {\r\n                const currentCollision = collisions[i];\r\n\r\n                // todo change this to \r\n                // 1. a) check if it's in the previous movements array and could move back \r\n                //    b) get next free spot - jump over glued items ( x dir if xresizeable, else ydir if yresizeable, else nearest if +ve y/x)\r\n                // 3. get collisions, add to the new collisions array\r\n                // 4. update maxRows, maxCols\r\n                // 5. return success = false if hit boundary and unable to get out\r\n\r\n                const nextCollisions = this.getNextGluedFreeCollisions( allItems, grid, draggedItem, currentCollision);\r\n                this.handleCollisions( currentCollision.newX, currentCollision.newY, currentCollision.width, currentCollision.height, nextCollisions );\r\n\r\n                newCollisions = newCollisions.concat(nextCollisions);\r\n                itemsToMove[currentCollision.id] = currentCollision;\r\n\r\n                const rowsRequired = currentCollision.newY + currentCollision.height\r\n                const columnsRequired = currentCollision.newX + currentCollision.width\r\n\r\n                if ( rowsRequired > maxRows )\r\n                    maxRows = rowsRequired\r\n\r\n                if ( columnsRequired > maxCols )\r\n                    maxCols = columnsRequired\r\n            }\r\n\r\n            collisions = newCollisions;\r\n        }\r\n\r\n        return { \r\n            itemsToMove: Object.keys(itemsToMove).map(key => itemsToMove[ key ]),\r\n            maxRows, \r\n            maxCols \r\n        }\r\n    }\r\n\r\n    getNextGluedFreeCollisions(allItems, grid, draggedItem, currentCollision) {\r\n        var nextCollisions,\r\n            gluedElement = {},\r\n            movingXDir = this._canResizeX;\r\n\r\n        while (gluedElement != null) {\r\n            nextCollisions = this.getCollisions(\r\n                allItems,\r\n                grid,\r\n                currentCollision.newX,\r\n                currentCollision.newY,\r\n                currentCollision.width,\r\n                currentCollision.height,\r\n                [ draggedItem.id, currentCollision.id ]);\r\n\r\n            gluedElement = this.findLargestGluedElement(nextCollisions);\r\n\r\n            if (gluedElement != null) {\r\n                if (movingXDir)\r\n                    currentCollision.newX = gluedElement.x + gluedElement.width;\r\n\r\n                else\r\n                    currentCollision.newY = gluedElement.y + gluedElement.height;\r\n            }\r\n        }\r\n\r\n        return nextCollisions;\r\n    }\r\n\r\n    handleCollisions( newX, newY, newWidth, newHeight, collisions ) {\r\n        var yOffset = 0,\r\n            xOffset = 0,\r\n            limit,\r\n            i,\r\n            collision,\r\n            minY = Number.MAX_SAFE_INTEGER,\r\n            minX = Number.MAX_SAFE_INTEGER;\r\n\r\n        if (collisions.length === 0)\r\n            return;\r\n        \r\n        if (this._canResizeX) {\r\n            for (i = 0, limit = collisions.length; i < limit; i++) {\r\n                collision = collisions[i];\r\n                minX = Math.min(minX, collision.x);\r\n            }\r\n\r\n            xOffset = Math.max(0, newX - minX) + newWidth - Math.max(0, minX - newX);\r\n        }\r\n        else {\r\n            for (i = 0, limit = collisions.length; i < limit; i++) {\r\n                collision = collisions[i];\r\n                minY = Math.min(minY, collision.y);\r\n            }\r\n\r\n            yOffset = Math.max(0, newY - minY) + newHeight - Math.max(0, minY - newY);\r\n        }\r\n\r\n        for (i = 0, limit = collisions.length; i < limit; i++) {\r\n            collision = collisions[i]\r\n            collision.newX = collision.x + xOffset\r\n            collision.newY = collision.y + yOffset\r\n\r\n            this.setPreviousMovements( collision, false )\r\n        }\r\n    }\r\n}\r\n\r\nexport default SnapAlgo"],"sourceRoot":""}